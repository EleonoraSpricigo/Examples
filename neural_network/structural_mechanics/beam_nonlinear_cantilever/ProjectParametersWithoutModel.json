{   "problem_data":{
        "problem_type": "train", 
        "echo_level":1
    },
    "processes":{
        "model_processes":[{
        "python_module" : "initiate_network_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "input_layer",
            "layer_parameters"    :{
            "layer_name"          : "input",
                "data_input"      : "data//training_in.dat"  
            }  
        }},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"                   : "dense_layer",
            "layer_parameters"             :{
                "units" 		     : 128
        }}},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "batch_normalization_layer",
            "layer_parameters"    :{
            }  
        }},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "activation_layer",
            "layer_parameters"    :{
                "activation"           : "sigmoid"
            }  
        }},    
      
        
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"                   : "dense_layer",
            "layer_parameters"             :{
                "units" 		     : 32
        }}},   
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "batch_normalization_layer",
            "layer_parameters"    :{
            }  
        }},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "activation_layer",
            "layer_parameters"    :{
                "activation"           : "sigmoid"
            }  
        }},     
        
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"                   : "dense_layer",
            "layer_parameters"             :{
                "units" 		     : 8
        }}},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "batch_normalization_layer",
            "layer_parameters"    :{
            }  
        }},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "activation_layer",
            "layer_parameters"    :{
                "activation"           : "sigmoid"
            }  
        }},    
            
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "dense_layer",
            "layer_parameters"    :{
                "units"           : 2,
                "activation"	   : "linear"
            }  
        }},
        {
        "python_module" : "save_model_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "model_name"          : "my_model",
            "format"              : "SavedModel"
        }}],
        "training_processes":[{
        "python_module" : "custom_loss_function_compiler",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{  
            "loss_function" : "MeanSquaredError"
        }},
        {
        "python_module" : "custom_optimizer_compiler",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{ 
            "optimizer"     : "Adam",
            "learning_rate" : 0.001,
            "decay"	     : 1e-3
        }},
        {
        "python_module" : "metric_compiler",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{ 
            "metric"     : "MeanSquaredError"
        }},
        {
        "python_module" : "set_callback_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{ 
            "callback_type"        : "early_stopping_callback",
            "callback_parameters"  : {
                "monitor"          : "mean_squared_error",
                "mode"             : "min",
                "verbose"          : 1,
                "patience"         : 100
            }
        }},
        {
        "python_module" : "train_saved_model_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "data_input"         : "data//training_in.dat",
            "data_output"        : "data//training_out.dat",
            "model"              : "my_model",
            "epochs"             : 10000,
            "shuffle"	          : true,
            "training_log"       : true,
            "training_log_file"  : "history.dat" 
        }}]
    },
    "output_processes":{
        "output_processes":[{
        "python_module" : "history_plotter_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "history_file"               : "history.dat",
            "variables"                  : ["mean_squared_error"],
            "output_format"              : "png",
            "output_name"                : "training_plot",
            "axis"                       : "semilogx",
            "burn_up"                    : 10
        }
    }]}
}
