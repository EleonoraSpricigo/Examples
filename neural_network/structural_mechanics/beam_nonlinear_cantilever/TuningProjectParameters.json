{   "problem_data":{
        "problem_type": "tuning", 
        "echo_level":1
    },
    "processes":{
        "model_processes":[
            {
            "python_module" : "initiate_network_process",
            "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
            "parameters"    :{
                "layer_type"          : "input_layer",
                "layer_parameters"    :{
                "layer_name"          : "input",
                    "data_input"      : "data_beam_validation//training_in.dat"  
                }  
            }},{
            "python_module" : "add_layer_process",
            "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
            "parameters"    :{
                "layer_type"          : "block_dense_layer",
                "layer_parameters"    :{
                    "batch_normalization"      : true,
                    "activation"               : "relu",
                    "tunable"                  : true,
                    "tunable_variable"         : "number_layers",
                    "tuning_parameters"        :{
                        "name"            : "layers_1",
                        "type_of_tuning"  : "Int",
                        "min_value"       : 1,
                        "max_value"       : 5
                    },
                    "layer_parameters"    :{
                        "tunable"             : true,
                        "tunable_variable"    : "units",
                        "tuning_parameters"   : {
                            "type_of_tuning"  : "Int",
                            "min_value"       : 8,
                            "max_value"       : 64
                        }
                    }  
        }}},
        {
        "python_module" : "add_layer_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "layer_type"          : "dense_layer",
            "layer_parameters"    :{
                "units"           : 2,
                "activation"      : "linear"
            }  
        }}],
        "training_processes":[
        {
        "python_module" : "custom_loss_function_compiler",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{  
            "loss_function" : "MeanSquaredError"
        }},
        {
        "python_module" : "custom_optimizer_compiler",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{ 
            "optimizer"         : "Adam",
            "learning_rate"     : 1e-3,
            "decay"		 : 1e-5
        }},
        {
        "python_module" : "metric_compiler",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{ 
            "metric"     : "MeanSquaredError"
        }},
        {
        "python_module" : "tune_built_hypermodel_process",
        "kratos_module" : "KratosMultiphysics.NeuralNetworkApplication",
        "parameters"    :{
            "data_input"            : "data_beam_validation//training_in.dat",
            "data_output"           : "data_beam_validation//training_out.dat",
            "model_name"            : "my_model",
            "tuner"                 : "RandomSearch",
            "epochs"                : 100,
            "num_models"            : 2,
            "objective"             : "loss",
            "max_trials"            : 20,
            "executions_per_trial"  : 3,
            "directory"             : "my_dir",
            "project_name"          : "tuner"
        }}]
    },
    "output_processes":{}
}
